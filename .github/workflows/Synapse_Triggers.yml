name: Dev_Start_Stop_Synapse_Triggers
on: [push]
env:
  clientAppId: '${{ secrets.CLIENT_ID }}'
  clientAppSecret: '${{ secrets.CLIENT_SECRET }}'
  subscriptionId: '${{ secrets.SUBSCRIPTION_ID}}'
  tenantId: '${{ secrets.TENANT_ID}}'
  resourcegroup: "RG-Metrolinx"
  synapseworkspace: "testtriggerautomate"
jobs:
  release:
    runs-on: windows-latest
    environment: dev
    steps:
      - uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}
          enable-AzPSSession: true

      - name: Install the powershell dependencies
        shell: pwsh
        run: |
          Install-Module -Name Az.Synapse -AllowClobber -Scope CurrentUser -Force
          Import-Module Az.Synapse

      - name: Synapse Start Dev Trigger 
        run: |
         # foreach($file in Get-ChildItem -Path ${{ env.artifactDirectory }}\${{ env.triggerPath }}\*.json -Name)
         # {
         #   $trigger = Get-Content -Raw ${{ env.artifactDirectory }}\${{ env.triggerPath }}\$file | ConvertFrom-Json  
         #   if(([string](az synapse trigger list --workspace-name ${{ vars.MX_SYNAPSE_WORKSPACE }} --query [].name) -match $trigger.name))
         #   {
         #     az synapse trigger start --workspace-name ${{ vars.MX_SYNAPSE_WORKSPACE }} --name $trigger.name
         #     #az synapse trigger resume --workspace-name  ${{ vars.MX_SYNAPSE_WORKSPACE }} --name $trigger.name
         #     echo "Trigger started"$trigger.name
         #   }          
         # }
         # Get the specified workspace
         param(
             [string]$SynapseWorkspace = "testtriggerautomate",
             [string]$ResourceGroup = "RG-Metrolinx",
             [string]$Action = "start",
             [string]$NameFilter = "",
             [switch]$WhatIf
         )

         Write-Output ("Getting workspace {0} in resource group {1}" -f $synapseworkspace, $resourcegroup)
         $workspace = Get-AzSynapseWorkspace -ResourceGroupName ${{ env.resourcegroup }} -Name ${{ env.synapseworkspace }}
         if (-not($workspace)) { throw "Could not find workspace" }
         Write-Output $workspace

         # Get the list of triggers if the workspace 
         Write-Output "Getting triggers"
         $triggers = Get-AzSynapseTrigger -WorkspaceObject $workspace
         if ($namefilter -ne '-') { $triggers = $triggers | Where-Object { $_.Name -match $namefilter } } # filter out names if the filter is specified
         Write-Output ("Found {0} triggers" -f $triggers.Count)
         if (-not($triggers)) { exit }

         # Continue only if there are triggers to be found
         if ($triggers.Count -gt 0) {
             if ($action -eq "start") {
                 # Start triggers
                 Write-Output "Looping through triggers that are stopped ..."
                 $stoppedtriggers = $triggers | Where-Object { $_.Properties.RuntimeState -eq "Stopped" }
                 Write-Output ("Found {0} stopped triggers" -f $stoppedtriggers.Count)

                 foreach ($t in $stoppedtriggers) {
                     Write-Output ("Starting {0} ..." -f $t.Name);
                     try {
                         $result = Start-AzSynapseTrigger -WorkspaceName $synapseworkspace -Name $t.name -WhatIf:$WhatIf.IsPresent -PassThru
                         Write-Output ("Result of starting trigger {0}: {1}" -f $t.Name, $result)
                     }
                     catch {
                         Write-Output ("Something went wrong with {0}" -f $t.Name)
                         Write-Output $_
                     }
                 }
             }

             Write-Output "... done"
         }
